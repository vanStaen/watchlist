{"version":3,"sources":["component/Entry/Tags/Tags.js","component/Entry/Actions/DeleteButton.js","component/Entry/Actions/RateThisVideo.js","component/Entry/Actions/CheckButton.js","component/Entry/Entry.js","component/Entries/Entries.js","component/Menu/MenuItem.js","component/Menu/Menu.js","component/Footer/Footer.js","App.js","index.js"],"names":["Tags","props","useState","tags","setTags","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","inputVisible","setInputVisible","inputValue","setInputValue","handleEditInputConfirm","e","handleEditInputCancel","handleEditInputChange","target","value","formattedTags","map","tag","index","isLongTag","length","size","className","onChange","onBlur","onPressEnter","color","closable","onClose","deleteTagIndex","oldTags","splice","console","log","handlerDeleteTag","onDoubleClick","preventDefault","slice","type","indexOf","newtags","onClick","PlusOutlined","DeleteButton","deleteEntry","entryID","a","axios","url","method","response","status","Error","data","entries","deleteEntryRequest","then","resData","catch","error","message","title","id","content","icon","DeleteOutlined","document","getElementById","style","display","RateThisVideo","allowHalf","defaultValue","CheckButton","success","CheckOutlined","Entry","youtubeVideoID","entry","link","split","date","Date","added","toLocaleDateString","isLongTitle","img","transform","setTimeout","alt","src","href","YoutubeOutlined","Entries","state","watchlistEntries","isLoading","this","loadEntries","fetchEntries","setState","margin","fontSize","Component","MenuItem","classNameItem","straightText","Menu","Footer","App","ReactDOM","render","StrictMode"],"mappings":"mbA2HeA,G,OArHF,SAAAC,GAAU,IAAD,EACMC,mBAASD,EAAME,MADrB,mBACXA,EADW,KACLC,EADK,OAE0BF,oBAAU,GAFpC,mBAEXG,EAFW,KAEKC,EAFL,OAG0BJ,mBAAS,IAHnC,mBAGXK,EAHW,KAGKC,EAHL,OAIsBN,oBAAS,GAJ/B,mBAIXO,EAJW,KAIGC,EAJH,OAKkBR,mBAAS,IAL3B,mBAKXS,EALW,KAKCC,EALD,KAcZC,EAAyB,SAAAC,GAC3BX,EAAKE,GAAkBE,EACvBH,EAAQD,GACRG,GAAmB,GACnBE,EAAkB,KAGhBO,EAAwB,SAAAD,GAC1BR,GAAmB,GACnBE,EAAkB,KAGhBQ,EAAwB,SAAAF,GAC1BN,EAAkBM,EAAEG,OAAOC,QA2BzBC,EAAgBhB,EAAKiB,KAAI,SAACC,EAAKC,GACjC,IAAMC,EAAYF,EAAIG,OAAS,GAC/B,OAAInB,IAAmBiB,EAEf,cAAC,IAAD,CAEIG,KAAK,QACLC,UAAU,YACVR,MAAOX,EACPoB,SAAUX,EACVY,OAAQb,EACRc,aAAchB,GANTS,GAYb,cAAC,IAAD,CACII,UAAU,WAEVI,MAAM,UACNC,UAAQ,EACRC,QAAS,kBArEI,SAACC,GACtB,IAAIC,EAAU/B,EACI+B,EAAQC,OAAOF,EAAgB,GACjD7B,EAAQ8B,GACRE,QAAQC,IAAIH,GAiEWI,CAAiBhB,IALpC,SAOI,sBACIiB,cAAe,SAAAzB,GACXR,EAAkBgB,GAClBd,EAAkBa,GAClBP,EAAE0B,kBAJV,SAOKjB,EAAS,UAAMF,EAAIoB,MAAM,EAAG,IAAnB,OAA8BpB,KAZvCC,MAkBjB,OACI,sBAAKI,UAAU,OAAf,UAEKP,EAEAV,GACG,cAAC,IAAD,CACIiC,KAAK,OACLjB,KAAK,QACLC,UAAU,YACVR,MAAOP,EACPgB,SAxEU,SAAAb,GACtBF,EAAcE,EAAEG,OAAOC,QAwEXU,OA1DU,WACtBhB,EAAc,IACdF,GAAgB,IAyDJmB,aAtEW,SAAAf,GACvB,IAAMH,EAAaG,EAAEG,OAAOC,MAC5B,GAAIP,IAA4C,IAA9BR,EAAKwC,QAAQhC,GAAoB,CAC/C,IAAMiC,EAAO,sBAAOzC,GAAP,CAAaQ,IAC1ByB,QAAQC,IAAIO,GACZxC,EAAQwC,GAEZhC,EAAc,IACdF,GAAgB,OAiEVD,GACE,eAAC,IAAD,CAAKiB,UAAU,gBAAgBmB,QA1DzB,WACdnC,GAAgB,IAyDR,UACI,cAACoC,EAAA,EAAD,IADJ,mB,4CCpEDC,EAzCM,SAAA9C,GAEjB,IASM+C,EAAc,SAACC,IACO,uCAAG,WAAOA,GAAP,iBAAAC,EAAA,sEACAC,IAAM,CACzBC,IAAK,iDAAmDH,EACxDI,OAAQ,WAHW,YAKE,OAJnBC,EADiB,QAKTC,OAAuC,MAApBD,EAASC,QALnB,sBAMb,IAAIC,MAAM,UANG,uBAQDF,EAASG,KARR,cAQjBC,EARiB,yBAShBA,GATgB,2CAAH,sDAYxBC,CAAmBV,GAASW,MAAK,SAACC,GAC9BzB,QAAQC,IAAIwB,MAEdC,OAAM,SAAAC,GACJ3B,QAAQC,IAAI0B,EAAMC,aAI1B,OACI,cAAC,IAAD,CAASC,MAAM,6BAAf,SACI,qBAAKvC,UAAU,wBAAwBmB,QAhCzB,SAAC/B,GACnBkC,EAAY/C,EAAMiE,IAClBF,IAAQD,MAAM,CACVI,QAAQ,sBAAD,OAAwBlE,EAAMiE,GAA9B,sBACPE,KAAM,cAACC,EAAA,EAAD,MAEVC,SAASC,eAAetE,EAAMiE,IAAIM,MAAMC,QAAU,QA0B9C,SACI,cAACJ,EAAA,EAAD,S,SCxBDK,EAbO,SAAAzE,GAMlB,OACI,cAAC,IAAD,CAASgE,MAAM,6BAAf,SACI,cAAC,IAAD,CAAMU,WAAS,EAACC,aAAc,EAAGjD,SANZ,SAACb,GAC1BsB,QAAQC,IAAIpC,EAAMiE,U,SCyCXW,G,OAxCK,SAAA5E,GA+BhB,OACI,cAAC,IAAD,CAASgE,MAAM,uBAAf,SACI,qBAAKvC,UAAU,uBAAuBmB,QA/BzB,SAAC/B,GAElBkD,IAAQc,QAAQ,CACZX,QAAQ,sBAAD,OAAwBlE,EAAMiE,GAA9B,6BACPE,KAAM,cAACW,EAAA,EAAD,OA2BN,SACI,cAACA,EAAA,EAAD,UCsCDC,G,OArED,SAAA/E,GAEZ,IAeMgF,EACJ,8BACAhF,EAAMiF,MAAMC,KAAKC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC1C,SAEIC,EAAO,IAAIC,KAAKrF,EAAMiF,MAAMK,OAAOC,qBACnCC,EAAcxF,EAAMiF,MAAMjB,MAAMzC,OAAS,GAE/C,OACE,qBAAKE,UAAU,aAAawC,GAAIjE,EAAMiF,MAAMhB,GAA5C,SACE,sBAAKxC,UAAU,mBAAmBwC,GAAI,QAAUjE,EAAMiF,MAAMhB,GAA5D,UACE,sBAAKxC,UAAU,mBAAmBmB,QA1BjB,WACrB,IAAMqB,EAAK,QAAUjE,EAAMiF,MAAMhB,GAC3BwB,EAAM,MAAQzF,EAAMiF,MAAMhB,GAChCI,SAASC,eAAeL,GAAIM,MAAMmB,UAAY,qCAC9CC,YAAW,WAActB,SAASC,eAAemB,GAAKlB,MAAMC,QAAU,SAAW,MAsB7E,UACE,qBACE/C,UAAU,kBACVwC,GAAI,MAAQjE,EAAMiF,MAAMhB,GACxB2B,IAAK5F,EAAMiF,MAAMjB,MACjB6B,IAAKb,IAEP,qBAAKvD,UAAU,mBAAf,SACGzB,EAAMiF,MAAMjB,WAGjB,sBAAKvC,UAAU,kBAAkBmB,QA7BZ,WACJ5C,EAAMiF,MAAMhB,GACbjE,EAAMiF,MAAMhB,IA2B5B,UAEE,sBAAKxC,UAAU,0BAAf,UACE,sBAAKA,UAAU,gCAAf,oBAAuD2D,KACtDI,EAAW,UAAMxF,EAAMiF,MAAMjB,MAAMxB,MAAM,EAAG,IAAjC,OAA4CxC,EAAMiF,MAAMjB,SAGtE,qBAAKvC,UAAU,wBAAf,SACE,cAAC,EAAD,CAAMvB,KAAMF,EAAMiF,MAAM/E,KAAM+D,GAAIjE,EAAMiF,MAAMhB,OAGhD,sBAAKxC,UAAU,2BAAf,UACE,cAAC,EAAD,CAAawC,GAAIjE,EAAMiF,MAAMhB,KAC7B,cAAC,EAAD,CAAeA,GAAIjE,EAAMiF,MAAMhB,KAC/B,cAAC,EAAD,CAAcA,GAAIjE,EAAMiF,MAAMhB,QAGhC,mBAAG6B,KAAM9F,EAAMiF,MAAMC,KAAMlE,OAAO,SAAlC,SACE,sBAAKS,UAAU,wBAAf,UACE,cAACsE,EAAA,EAAD,IADF,uCCFGC,G,mNAzDbC,MAAQ,CACNC,iBAAkB,GAClBC,WAAW,G,kEAIXC,KAAKC,gB,oCAGQ,IAAD,mDACZ,8BAAApD,EAAA,sEACyBC,IAAM,CAC3BC,IAAK,gDACLC,OAAQ,QAHZ,YAK2B,OAJnBC,EADR,QAKgBC,OAAuC,MAApBD,EAASC,QAL5C,sBAMU,IAAIC,MAAM,UANpB,uBAQwBF,EAASG,KARjC,cAQQC,EARR,yBASSA,GATT,4CADY,kEAaZ6C,GAAe3C,MAAK,SAACC,GACnB,IAAMH,EAAUG,EAChB,EAAK2C,SAAS,CAAEL,iBAAkBzC,IAClC,EAAK8C,SAAS,CAAEJ,WAAW,OAE3BtC,OAAM,SAAAC,GACN3B,QAAQC,IAAI0B,EAAMC,c,+BAMpB,IAAMN,EAAU2C,KAAKH,MAAMC,iBAAiB/E,KAAI,SAAA8D,GACSA,EAAMC,KAAKC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC3F,OAAO,cAAC,EAAD,CAAsBF,MAAOA,GAAjBA,EAAMhB,OAE3B,OACE,qBAAKM,MAAO,CAAEiC,OAAQ,IAAtB,SACIJ,KAAKH,MAAME,UACX,sBAAK1E,UAAU,mBAAf,UACE,qBAAKoE,IAAI,oDAAoDpE,UAAU,WAAWmE,IAAI,SACtF,uBACA,qBAAKrB,MAAO,CAAEkC,SAAU,IAAxB,6BAGD,qBAAKhF,UAAU,gBAAf,SACEgC,U,GAlDSiD,cCUPC,G,MAbE,SAAC3G,GAEhB,IAAM4G,EAAgB5G,EAAM6G,aAAe,6BAA+B,4BAE1E,OACE,mBAAGf,KAAK,IAAIF,IAAK5F,EAAMgE,MAAvB,SACE,qBAAKvC,UAAWmF,EAAhB,SACG5G,EAAMgE,YCKA8C,EAXF,WAEX,OACE,sBAAKrF,UAAU,OAAf,UACE,cAAC,EAAD,CAAUuC,MAAM,QAChB,cAAC,EAAD,CAAUA,MAAM,WAChB,cAAC,EAAD,CAAUA,MAAM,IAAI6C,cAAc,QCEzBE,G,OATA,WAEX,OACI,sBAAKtF,UAAU,eAAf,0BACiB,mBAAGqE,KAAK,iCAAiC9E,OAAO,SAAhD,kCADjB,cCYOgG,MAZf,WACE,OACE,sBAAKvF,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QCRNwF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAASC,eAAe,U","file":"static/js/main.b94b789e.chunk.js","sourcesContent":["import { React, useState } from 'react';\nimport { Tag, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport './Tags.css'\n\nconst Tags = props => {\n    const [tags, setTags] = useState(props.tags);\n    const [editInputIndex, setEditInputIndex] = useState(-1);\n    const [editInputValue, setEditInputValue] = useState('');\n    const [inputVisible, setInputVisible] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n\n    const handlerDeleteTag = (deleteTagIndex) => {\n        let oldTags = tags;\n        let deletedTags = oldTags.splice(deleteTagIndex, 1);\n        setTags(oldTags);\n        console.log(oldTags);\n    }\n\n    const handleEditInputConfirm = e => {\n        tags[editInputIndex] = editInputValue;\n        setTags(tags);\n        setEditInputIndex(-1)\n        setEditInputValue('');\n    };\n\n    const handleEditInputCancel = e => {\n        setEditInputIndex(-1)\n        setEditInputValue('');\n    };\n\n    const handleEditInputChange = e => {\n        setEditInputValue(e.target.value);\n    };\n\n    const handleInputChange = e => {\n        setInputValue(e.target.value);\n    };\n\n    const handleInputConfirm = e => {\n        const inputValue = e.target.value;\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            const newtags = [...tags, inputValue];\n            console.log(newtags);\n            setTags(newtags);\n        }\n        setInputValue('');\n        setInputVisible(false);\n    };\n\n    const handleInputCancel = () => {\n        setInputValue('');\n        setInputVisible(false);\n    };\n\n    const showInput = () => {\n        setInputVisible(true);\n    };\n\n    const formattedTags = tags.map((tag, index) => {\n        const isLongTag = tag.length > 20;\n        if (editInputIndex === index) {\n            return (\n                <Input\n                    key={index}\n                    size=\"small\"\n                    className=\"tag-input\"\n                    value={editInputValue}\n                    onChange={handleEditInputChange}\n                    onBlur={handleEditInputCancel}\n                    onPressEnter={handleEditInputConfirm}\n                />\n            );\n        }\n\n        return (\n            <Tag\n                className=\"edit-tag\"\n                key={index}\n                color=\"#2B3131\"\n                closable\n                onClose={() => handlerDeleteTag(index)}\n            >\n                <span\n                    onDoubleClick={e => {\n                        setEditInputIndex(index);\n                        setEditInputValue(tag);\n                        e.preventDefault();\n                    }}\n                >\n                    {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                </span>\n            </Tag>\n        );\n    });\n\n    return (\n        <div className='tags'>\n\n            {formattedTags}\n\n            {inputVisible && (\n                <Input\n                    type=\"text\"\n                    size=\"small\"\n                    className=\"tag-input\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    onBlur={handleInputCancel}\n                    onPressEnter={handleInputConfirm}\n                />\n            )}\n            {!inputVisible && (\n                <Tag className=\"site-tag-plus\" onClick={showInput}>\n                    <PlusOutlined /> New Tag\n                </Tag>\n            )}\n\n        </div>\n    )\n}\n\nexport default Tags\n\n\n\n/*\nclass EditableTagGroup extends React.Component {\n\n    state = {\n        tags: ['Unremovable', 'Tag 2', 'Tag 3'],\n        inputVisible: false,\n        inputValue: '',\n        editInputIndex: -1,\n        editInputValue: '',\n    };\n\n    handleClose = removedTag => {\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\n        console.log(tags);\n        this.setState({ tags });\n    };\n\n    showInput = () => {\n        this.setState({ inputVisible: true }, () => this.input.focus());\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value });\n    };\n\n    handleInputConfirm = () => {\n        const { inputValue } = this.state;\n        let { tags } = this.state;\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue];\n        }\n        console.log(tags);\n        this.setState({\n            tags,\n            inputVisible: false,\n            inputValue: '',\n        });\n    };\n\n    handleEditInputChange = e => {\n        this.setState({ editInputValue: e.target.value });\n    };\n\n    handleEditInputConfirm = () => {\n        this.setState(({ tags, editInputIndex, editInputValue }) => {\n            const newTags = [...tags];\n            newTags[editInputIndex] = editInputValue;\n\n            return {\n                tags: newTags,\n                editInputIndex: -1,\n                editInputValue: '',\n            };\n        });\n    };\n\n    saveInputRef = input => {\n        this.input = input;\n    };\n\n    saveEditInputRef = input => {\n        this.editInput = input;\n    };\n\n    render() {\n        return (\n            <>\n                {tags.map((tag, index) => {\n                    if (editInputIndex === index) {\n                        return (\n                            <Input\n                                ref={this.saveEditInputRef}\n                                key={tag}\n                                size=\"small\"\n                                className=\"tag-input\"\n                                value={editInputValue}\n                                onChange={this.handleEditInputChange}\n                                onBlur={this.handleEditInputConfirm}\n                                onPressEnter={this.handleEditInputConfirm}\n                            />\n                        );\n                    }\n\n                    const isLongTag = tag.length > 20;\n\n                    const tagElem = (\n                        <Tag\n                            className=\"edit-tag\"\n                            key={tag}\n                            closable={index !== 0}\n                            onClose={() => this.handleClose(tag)}\n                        >\n                            <span\n                                onDoubleClick={e => {\n                                    if (index !== 0) {\n                                        this.setState({ editInputIndex: index, editInputValue: tag }, () => {\n                                            this.editInput.focus();\n                                        });\n                                        e.preventDefault();\n                                    }\n                                }}\n                            >\n                                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                            </span>\n                        </Tag>\n                    );\n                    return isLongTag ? (\n                        <Tooltip title={tag} key={tag}>\n                            {tagElem}\n                        </Tooltip>\n                    ) : (\n                            tagElem\n                        );\n                })}\n                {inputVisible && (\n                    <Input\n                        ref={this.saveInputRef}\n                        type=\"text\"\n                        size=\"small\"\n                        className=\"tag-input\"\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        onBlur={this.handleInputConfirm}\n                        onPressEnter={this.handleInputConfirm}\n                    />\n                )}\n                {!inputVisible && (\n                    <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n                        <PlusOutlined /> New Tag\n                    </Tag>\n                )}\n            </>\n        );\n    }\n}\n */","import React from 'react';\nimport axios from 'axios';\nimport { Button, Tooltip, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst DeleteButton = props => {\n\n    const handlerDelete = (e) => {\n        deleteEntry(props.id);\n        message.error({\n            content: `Watchlist entry id ${props.id} has been deleted.`,\n            icon: <DeleteOutlined />,\n        });\n        document.getElementById(props.id).style.display = \"none\";\n    }\n\n    const deleteEntry = (entryID) => {\n        const deleteEntryRequest = async (entryID) => {\n            const response = await axios({\n                url: 'https://watchlist-cvs.herokuapp.com/watchlist/' + entryID,\n                method: \"DELETE\",\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const entries = await response.data;\n            return entries;\n        }\n        // fetch Entries\n        deleteEntryRequest(entryID).then((resData) => {\n            console.log(resData)\n        }\n        ).catch(error => {\n            console.log(error.message);\n        });\n    };\n\n    return (\n        <Tooltip title=\"Delete video from the list\">\n            <div className=\"Button Button__delete\" onClick={handlerDelete}>\n                <DeleteOutlined />\n            </div>\n        </Tooltip>\n    )\n}\n\nexport default DeleteButton","import React from 'react';\nimport { Tooltip, Rate } from 'antd';\n\nconst RateThisVideo = props => {\n\n    const handlerRateThisVideo = (e) => {\n        console.log(props.id);\n    }\n\n    return (\n        <Tooltip title=\"Delete video from the list\">\n            <Rate allowHalf defaultValue={0} onChange={handlerRateThisVideo} />\n        </Tooltip>\n    )\n}\n\nexport default RateThisVideo","import React from 'react';\nimport axios from 'axios';\nimport { Tooltip, message } from 'antd';\nimport { CheckOutlined } from '@ant-design/icons';\n\nimport './Actions.css';\n\nconst CheckButton = props => {\n\n    const handlerCheck = (e) => {\n        //deleteEntry(props.id);\n        message.success({\n            content: `Watchlist entry id ${props.id} has been marked as done.`,\n            icon: <CheckOutlined />,\n        });\n    }\n\n    const deleteEntry = (entryID) => {\n        const deleteEntryRequest = async (entryID) => {\n            const response = await axios({\n                url: 'https://watchlist-cvs.herokuapp.com/watchlist/' + entryID,\n                method: \"DELETE\",\n            });\n            if ((response.status !== 200) & (response.status !== 201)) {\n                throw new Error(\"Error!\");\n            }\n            const entries = await response.data;\n            return entries;\n        }\n        // fetch Entries\n        deleteEntryRequest(entryID).then((resData) => {\n            console.log(resData)\n        }\n        ).catch(error => {\n            console.log(error.message);\n        });\n    };\n\n    return (\n        <Tooltip title=\"Mark video as viewed\">\n            <div className=\"Button Button__check\" onClick={handlerCheck}>\n                <CheckOutlined />\n            </div>\n        </Tooltip>\n    )\n}\n\nexport default CheckButton","import React from 'react';\nimport { YoutubeOutlined } from '@ant-design/icons';\nimport Tags from './Tags/Tags'\nimport DeleteButton from './Actions/DeleteButton'\nimport RateThisVideo from './Actions/RateThisVideo'\nimport CheckButton from './Actions/CheckButton'\nimport './Entry.css'\n\n// Card Flip:  https://3dtransforms.desandro.com/card-flip\n\nconst Entry = props => {\n\n  const handlerFlipDiv = () => {\n    const id = 'inner' + props.entry.id;\n    const img = 'img' + props.entry.id;\n    document.getElementById(id).style.transform = \"translateX(-100%) rotateY(-180deg)\";\n    setTimeout(function () { document.getElementById(img).style.display = \"none\"; }, 500);\n\n  }\n\n  const handlerFlipDivBack = () => {\n    const id = 'inner' + props.entry.id;\n    const img = 'img' + props.entry.id;\n    //document.getElementById(img).style.display = \"block\";\n    //document.getElementById(id).style.transform = \"rotateY(0deg)\";\n  }\n\n  const youtubeVideoID =\n    'https://img.youtube.com/vi/' +\n    props.entry.link.split('&')[0].split('=')[1] +\n    '/0.jpg'\n\n  const date = new Date(props.entry.added).toLocaleDateString();\n  const isLongTitle = props.entry.title.length > 35;\n\n  return (\n    <div className='entry-card' id={props.entry.id}>\n      <div className='entry-card-inner' id={'inner' + props.entry.id}>\n        <div className='entry-card-front' onClick={handlerFlipDiv}>\n          <img\n            className='entry-card__img'\n            id={'img' + props.entry.id}\n            alt={props.entry.title}\n            src={youtubeVideoID}\n          />\n          <div className=\"entry-card__meta\">\n            {props.entry.title}\n          </div>\n        </div>\n        <div className='entry-card-back' onClick={handlerFlipDivBack}>\n\n          <div className='entry-card-back__header'>\n            <div className='entry-card-back__header-added'>Added: {date}</div>\n            {isLongTitle ? `${props.entry.title.slice(0, 35)}...` : props.entry.title}\n          </div>\n\n          <div className='entry-card-back__tags'>\n            <Tags tags={props.entry.tags} id={props.entry.id} />\n          </div>\n\n          <div className='entry-card-back__actions'>\n            <CheckButton id={props.entry.id} />\n            <RateThisVideo id={props.entry.id} />\n            <DeleteButton id={props.entry.id} />\n          </div>\n\n          <a href={props.entry.link} target='_blank'>\n            <div className=\"entry-card-back__play\">\n              <YoutubeOutlined />\n              &nbsp; Watch on Youtube\n            </div>\n          </a>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Entry","import React, { Component } from \"react\";\nimport Entry from '../Entry/Entry'\nimport axios from 'axios';\n\nimport './Entries.css';\n\nclass Entries extends Component {\n\n  state = {\n    watchlistEntries: [],\n    isLoading: true,\n  }\n\n  componentDidMount() {\n    this.loadEntries();\n  }\n\n  loadEntries() {\n    async function fetchEntries() {\n      const response = await axios({\n        url: 'https://watchlist-cvs.herokuapp.com/watchlist',\n        method: \"GET\",\n      });\n      if ((response.status !== 200) & (response.status !== 201)) {\n        throw new Error(\"Error!\");\n      }\n      const entries = await response.data;\n      return entries;\n    }\n    // fetch Entries\n    fetchEntries().then((resData) => {\n      const entries = resData;\n      this.setState({ watchlistEntries: entries });\n      this.setState({ isLoading: false });\n    }\n    ).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n\n  render() {\n    const entries = this.state.watchlistEntries.map(entry => {\n      const youtubeVideoID = \"https://img.youtube.com/vi/\" + entry.link.split('&')[0].split('=')[1] + \"/0.jpg\"\n      return <Entry key={entry.id} entry={entry} />\n    })\n    return (\n      <div style={{ margin: 30 }}>\n        { this.state.isLoading ?\n          <div className=\"entries__spinner\">\n            <img src=\"https://avatars0.githubusercontent.com/u/12551446\" className=\"App-logo\" alt=\"logo\" />\n            <br />\n            <div style={{ fontSize: 18 }}>Loading ... </div>\n          </div>\n          :\n          (<div className='Entries__Main'>\n            {entries}\n          </div>)\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Entries;\n","import React from 'react'\nimport './Menu.css'\n\nconst MenuItem = (props) => {\n\n  const classNameItem = props.straightText ? 'MenuItem MenuItem_straight' : 'MenuItem MenuItem__turned';\n\n  return (\n    <a href=\"#\" alt={props.title}>\n      <div className={classNameItem}>\n        {props.title}\n      </div>\n    </a>\n  )\n}\n\nexport default MenuItem","import React from 'react'\nimport MenuItem from './MenuItem'\nimport './Menu.css'\n\nconst Menu = () => {\n\n  return (\n    <div className='Menu'>\n      <MenuItem title=\"add\" />\n      <MenuItem title=\"filter\" />\n      <MenuItem title=\"?\" straightText={true} />\n    </div>\n  )\n}\n\nexport default Menu","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () => {\n\n    return (\n        <div className='Footer__Main'>\n            Watchlist by <a href=\"http://www.clementvanstaen.com\" target=\"_blank\" >Clément van Staen</a>, 2020\n        </div>\n    )\n}\n\nexport default Footer","import './App.css';\n\nimport Entries from './component/Entries/Entries';\nimport Menu from './component/Menu/Menu';\nimport Footer from './component/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Menu />\n        <Entries />\n      </header>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}